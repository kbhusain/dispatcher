# Generated by Django 4.0.1 on 2022-03-15 21:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Donateditem',
            fields=[
                ('don_id', models.AutoField(db_column='don_ID', primary_key=True, serialize=False)),
                ('don_title', models.CharField(max_length=128)),
                ('don_item_type', models.CharField(max_length=64)),
                ('don_status', models.IntegerField(blank=True, choices=[('', 'Choose your score'), (1, '1 - Very Poor'), (2, '2 - Below Average'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], default=3, null=True)),
                ('don_given_to', models.PositiveIntegerField(db_column='don_given_to', null=True)),
                ('don_donated_by', models.IntegerField(db_column='don_donated_by', null=True)),
                ('don_requester_id', models.IntegerField(db_column='don_requester_ID')),
                ('don_caseworker_id', models.IntegerField(db_column='don_caseworker_ID')),
                ('don_multibuy', models.SmallIntegerField()),
                ('don_description', models.TextField(blank=True, null=True)),
                ('don_actualprice', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('don_estprice', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('don_minimum', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('don_materialvalue', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('don_enteredby', models.PositiveSmallIntegerField(db_column='don_EnteredBy')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('don_neededbydate', models.DateField(db_column='don_NeededByDate')),
                ('don_filledbydate', models.DateField(db_column='don_FilledByDate')),
                ('don_notes', models.TextField(blank=True, default='', max_length=255, null=True)),
                ('don_upload', models.ImageField(upload_to='uploads/')),
            ],
            options={
                'db_table': 'Donateditem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='itemStatusType',
            fields=[
                ('itm_id', models.AutoField(db_column='itm_ID', primary_key=True, serialize=False)),
                ('itm_Status', models.CharField(blank=True, db_column='itm_Status', max_length=64, null=True)),
            ],
            options={
                'db_table': 'itemStatusType',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='itemType',
            fields=[
                ('itm_id', models.AutoField(db_column='itm_ID', primary_key=True, serialize=False)),
                ('itm_Type', models.CharField(blank=True, db_column='itm_Type', max_length=64, null=True)),
            ],
            options={
                'db_table': 'itemType',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='onePerson',
            fields=[
                ('person_id', models.AutoField(db_column='person_ID', primary_key=True, serialize=False)),
                ('person_title', models.CharField(blank=True, db_column='person_Title', max_length=50, null=True)),
                ('person_type', models.CharField(blank=True, choices=[('', 'Choose Person Type'), ('DONOR', 'Donor'), ('PRODUCER', 'Volunteer or Producer'), ('REQUESTER', 'Recipient or Requester')], db_column='person_Type', default='REQUESTER', max_length=10, null=True)),
                ('person_djangoid', models.CharField(blank=True, db_column='person_DjangoID', max_length=50, null=True)),
                ('person_firstname', models.CharField(blank=True, db_column='person_FirstName', max_length=50, null=True)),
                ('person_middlename', models.CharField(blank=True, db_column='person_MiddleName', max_length=50, null=True)),
                ('person_lastname', models.CharField(blank=True, db_column='person_LastName', max_length=50, null=True)),
                ('person_suffix', models.CharField(blank=True, db_column='person_Suffix', max_length=50, null=True)),
                ('person_address1', models.CharField(blank=True, db_column='person_Address1', max_length=50, null=True)),
                ('person_address2', models.CharField(blank=True, db_column='person_Address2', max_length=50, null=True)),
                ('person_city', models.CharField(blank=True, db_column='person_City', max_length=50, null=True)),
                ('person_state', models.CharField(blank=True, db_column='person_State', max_length=50, null=True)),
                ('person_zip', models.CharField(blank=True, db_column='person_Zip', max_length=50, null=True)),
                ('person_origincountry', models.CharField(blank=True, db_column='person_OriginCountry', max_length=50, null=True)),
                ('person_homephone', models.CharField(blank=True, db_column='person_HomePhone', max_length=30, null=True)),
                ('person_workphone', models.CharField(blank=True, db_column='person_WorkPhone', max_length=30, null=True)),
                ('person_cellphone', models.CharField(blank=True, db_column='person_CellPhone', max_length=30, null=True)),
                ('person_email', models.CharField(blank=True, db_column='person_Email', max_length=50, null=True)),
                ('person_workemail', models.CharField(blank=True, db_column='person_WorkEmail', max_length=50, null=True)),
                ('person_gender', models.CharField(choices=[('', 'Choose Person Gender'), ('0', 'Male'), ('1', 'Female')], db_column='person_Gender', default='M', max_length=10, null=True)),
                ('person_dob', models.DateField(blank=True, null=True)),
                ('person_familysituation', models.CharField(blank=True, db_column='person_familysituation', max_length=255, null=True, verbose_name='Family Situation')),
                ('person_dateemployed', models.DateField(blank=True, db_column='person_DateEmployed', null=True, verbose_name='Date Employed')),
                ('person_datedrvlic', models.DateField(blank=True, db_column='person_DateDrvLic', null=True, verbose_name='Date on License')),
                ('person_datedeactivated', models.DateField(blank=True, db_column='person_DateDeactivated', null=True, verbose_name='Date Removed')),
                ('person_cashdonated', models.FloatField(blank=True, db_column='person_cashDonated', null=True, verbose_name='Cash Donated')),
                ('person_notes', models.TextField(blank=True, db_column='person_notes', null=True, verbose_name='Notes')),
                ('person_numkids', models.IntegerField(blank=True, db_column='person_numkids', null=True, verbose_name='Num of kids')),
                ('person_agekids', models.CharField(blank=True, db_column='person_agekids', max_length=32, null=True, verbose_name='Kids ages')),
                ('person_spouse', models.CharField(blank=True, db_column='person_spouse', max_length=32, null=True, verbose_name='Spouse Name')),
                ('person_certificates', models.CharField(blank=True, db_column='person_certificates', max_length=255, null=True, verbose_name='Certificates')),
                ('person_education', models.CharField(blank=True, db_column='person_education', max_length=64, null=True, verbose_name='Education')),
                ('person_languages', models.CharField(blank=True, db_column='person_languages', max_length=255, null=True, verbose_name='Languages')),
                ('person_ssn', models.CharField(blank=True, db_column='person_ssn', max_length=32, null=True, verbose_name='Soc. Sec. Num')),
                ('person_snap', models.CharField(blank=True, db_column='person_snap', max_length=32, null=True, verbose_name='SNAP Card Num')),
                ('person_arrivaldate', models.DateField(blank=True, db_column='person_ArrivalDate', null=True, verbose_name='Arrival Date')),
                ('person_vehicleinfo', models.CharField(blank=True, db_column='person_vehicleinfo', max_length=255, null=True, verbose_name='Vehicle owned info')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('person_enteredby', models.PositiveSmallIntegerField(blank=True, db_column='person_EnteredBy', null=True)),
                ('person_editedby', models.PositiveSmallIntegerField(blank=True, db_column='person_EditedBy', null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'oneperson',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Requesteditem',
            fields=[
                ('req_id', models.AutoField(db_column='req_ID', primary_key=True, serialize=False)),
                ('req_item_type', models.IntegerField(blank=True, null=True)),
                ('req_status', models.IntegerField(blank=True, choices=[(0, 'Open'), (1, 'Initiated'), (2, 'Approved'), (3, 'Rejected'), (4, 'Cancelled'), (5, 'Assigned'), (6, 'Progressing'), (7, 'Completed'), (8, 'Closed')], default=0, null=True)),
                ('req_assigned_to', models.IntegerField(blank=True, null=True)),
                ('req_quantity', models.SmallIntegerField(blank=True, null=True)),
                ('req_title', models.CharField(blank=True, max_length=128, null=True)),
                ('req_description', models.TextField(blank=True, null=True)),
                ('req_actualprice', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('req_estprice', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('req_minimum', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('req_time_taken', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('req_materialvalue', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('req_enteredby', models.IntegerField(blank=True, db_column='req_EnteredBy', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('req_neededbydate', models.DateField(blank=True, db_column='req_NeededByDate', null=True)),
                ('req_filledbydate', models.DateField(blank=True, db_column='req_FilledByDate', null=True)),
                ('req_notes', models.TextField(blank=True, max_length=255, null=True)),
                ('req_upload', models.ImageField(blank=True, null=True, upload_to='uploads/')),
                ('req_requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='r2p.oneperson')),
            ],
            options={
                'db_table': 'requesteditem',
                'managed': True,
            },
        ),
    ]
